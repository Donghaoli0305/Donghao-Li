An AI for the game Gomoku. Gomoku is like TicTac-Toe, but the board is larger. The number of marks needed to win is also larger, and not
necessarily the same as the board size. This implementation uses custom board sizes and win
sizes.
The following .py files are involved:
• gomoku.py: Contains the domain API for the game. The game state is represented by
a 2D NumPy array, where +1, −1, and 0 entries indicate max player (x) marks, min
player (o) marks, and empty board positions, respectively. Actions are represented by
(row,col) tuples indicating the row and column in which the next mark is placed.
• minimax.py: Contains a minimax search algorithm with multiple features, including
depth limit, evaluation function, and alpha-beta pruning.
• evaluation.py: Contains two evaluation functions for depth-limited minimax, including
one you can implement for bonus credit.
• competition.py: Runs a competition between a simple evaluation function and the one
you implement. Run this file to see whether you will receive any bonus credit.
